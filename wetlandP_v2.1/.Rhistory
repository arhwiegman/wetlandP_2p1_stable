load("C:\\Workspace\\wetlandP\\model_versions\\wetlandP_v1\\wetlandP_v1.1\\outputs\\sim_static_Z_w_2020-05-18_May051589821296.Rdata")
load("outputs\\sim_static_Z_w_2020-05-18_May051589821296.Rdata")
print(figs$states)
print(fig_DIP)
df <- readxl::read_excel("documentation/stoicheometry.xlsx",
"states",
range = "B2:D16")
knitr::kable(df,
digits=4,
cap="state variables calculated with ordinary differential equations",
format = "pandoc")
df <- fn_generate_doc_table(fconn="scripts/subroutines.R",
startline=591,
endline=624,
fname="processes")
df <- fn_generate_doc_table(fconn="scripts/subroutines.R",
startline=591,
endline=624,
fname="processes")
knitr::opts_chunk$set(echo = FALSE)
dir()
source(file.path(getwd(),"scripts","dependancies.R"))
dir("documentation")
dir(file.path(getwd(),"scripts"))
dir("inputs")
head(dir("outputs"))
diagram_path <- paste0(getwd(),"/documentation/wetlandP_v2.1_Conceptual_Diagram.png")
knitr::opts_chunk$set(echo = FALSE)
options(knitr.kable.NA = '')
source("documentation/generate_documentation_tables.R")
load("outputs\\sim_static_Z_w_2020-05-18_May051589821296.Rdata")
print(figs$states)
print(fig_DIP)
df <- readxl::read_excel("documentation/stoicheometry.xlsx",
"states",
range = "B2:D16")
knitr::kable(df,
digits=4,
cap="state variables calculated with ordinary differential equations",
format = "pandoc")
df <- fn_generate_doc_table(fconn="scripts/subroutines.R",
startline=591,
endline=624,
fname="processes")
df$Value <- str_replace_all(df$Value,"\\*","\\\\\\*")
knitr::kable(df,
digits=4,
cap="process flows (adding or subtracting from state variables)",
format = "pandoc")
df <- readxl::read_excel("documentation/stoicheometry.xlsx",
"rates",
range = "A2:D12")
knitr::kable(df,
digits=4,
cap="process rates (calculated as a function of forcing variables, intermediate variables and state variables)",
format = "pandoc")
x <- "
Symbol | Units | Definition | Assumptions and Sources
Zs | (m, NAD'83)| elevation of sediment surface  | estimated from LiDAR 0.5m DEM (VCGI), corrected with Emlid Reach RS+ RTK/GNSS survey (centimeter level accuracy)
Hw | (m) | height of water above sediment surface | measured with HOBO MX2001 water level logger
Zw | (m, NAD'83)| elevation of water | Hw +  Zs
A | (m^2) | wetland surface area | interpolated from stage table as f(Hw)
Vw | (m^3) | Water volume of wetland surface water | calculated from A and H_w
ET | (cm/day) | Evapotranspiration rate | Calculated at daily intervals with penman monteith equation via the `Evapotranspiration` package, weather data from BURLINGTON INTERNATIONAL AIRPORT, VT US (WBAN:14742) (NOAA NCDC)
ip | (cm/day) | Precipitation rate | totals derived from sub-hourly weather observations from BURLINGTON INTERNATIONAL AIRPORT, VT US (WBAN:14742)(NOAA NCDC)
Qnet | (m^3) | net surface flow | deduced from dVw, and A(ip - ET)
Qin | (m^3/day) | Volumetric inflow rate | modeled with HydroCAD and/or solved from water balance
Qout | (m^3/day)| Wetland discharge (outflow) rate | Modeled as a f(Hw) based on site observations
Qg | (m^3/day) | Groundwater discharge (negative for infiltration) | assumed = 0
Uw |(m/s) | Wind speed | mean derived from sub-hourly data from BURLINGTON INTERNATIONAL AIRPORT, VT US (WBAN:14742) | used in evapotranspiration calculation
Tair | (°C) | Daily air temperature | mean derived from sub-hourly data BURLINGTON INTERNATIONAL AIRPORT, VT US (WBAN:14742) |
TW | (°C) | Daily water average temperature | Modeled from Tair using equation from linear model fit to temperature measured with PME miniDOT. IF(Tair > 0): TW = 2.5+0.8Tair ELSE: TW = 0
"
read_delim(x,delim="|") %>% knitr::kable(caption="Table 1. Hydroclimate variables",
format = "pandoc")
df <- fn_generate_doc_table(
fconn="documentation/parameters_local.R",
fname="parameters_local",
patt = "^[^#]+=.+#.+\\|.+\\|.*$", # string pattern
startline = 0,
endline = -1L)
df$Value <- str_replace_all(df$Value,"\\*","\\\\\\*")
knitr::kable(df,
digits=4,
format = "pandoc",
cap="local (measured) parameters")
df <- fn_generate_doc_table(
fconn="documentation/parameters_stochastic.R",
fname="stochastic",
patt = "^[^#]+=.+#.+\\|.+\\|.*$", # string pattern
startline = 0,
endline = -1L)
df$Value <- str_replace_all(df$Value,"\\*","\\\\\\*")
knitr::kable(df,
digits=4,
format = "pandoc",
cap="stochastic (unmeasured/calibrated) parameters")
df <- fn_generate_doc_table(
fconn="documentation/parameters_universal_constants.R",
fname="parameters_universal_constant",
patt = "^[^#]+=.+#.+\\|.+\\|.*$", # string pattern
startline = 0,
endline = -1L)
df$Value <- str_replace_all(df$Value,"\\*","\\\\\\*")
knitr::kable(df,
digits=4,
format = "pandoc",
cap="universal constant parameters")
df <- fn_generate_doc_table(
fconn="documentation/parameters_simulation.R",
fname="parameters_simulation",
patt = "^[^#]+=.+#.+\\|.+\\|.*$", # string pattern
startline = 0,
endline = -1L)
df$Value <- str_replace_all(df$Value,"\\*","\\\\\\*")
knitr::kable(df,
digits=4,
format = "pandoc",
cap="run specifications parameters")
df <- read_lines(as.character(sub_diffeqs)) %>%
str_subset("=") %>%
str_squish() %>%
str_split("=",simplify = TRUE)
colnames(df) <- c("Name","Value")
knitr::kable(df,
format = "pandoc",
cap="Differential equations for model states")
df <- readxl::read_excel("documentation/stoicheometry.xlsx",
"stoicheometry",
range = "B2:P29")
knitr::kable(df,
digits=4,
format = "pandoc",
cap="parameters (numeric constants and run specifications)",
escape=FALSE)
